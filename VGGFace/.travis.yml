dist: trusty
language: python
cache:
  directories:
    - $HOME/.theano
matrix:
    include:
        - python: 3.6
          env: KERAS_BACKEND=tensorflow MODE=TF2
install:
  # code below is taken from http://conda.pydata.org/docs/travis.html
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  - travis_retry conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - source activate test-environment

  - travis_retry pip install --only-binary=numpy,scipy,pandas numpy nose scipy h5py theano pytest pytest-pep8 pandas --progress-bar off
  - pip install keras_applications keras_preprocessing --progress-bar off

  # set library path
  - export LD_LIBRARY_PATH=$HOME/miniconda/envs/test-environment/lib/:$LD_LIBRARY_PATH

    # install pydot for visualization tests
  - travis_retry conda install -q $MKL pydot graphviz $PIL

  - pip install -e .[tests] --progress-bar off

  # install TensorFlow (CPU version).
  - if [[ "$MODE" == "TF2" ]]; then
    pip install tf-nightly-2.0-preview --progress-bar off;
    else
    pip install tensorflow==1.14.0 --progress-bar off;
    fi

  # install cntk
  - if [[ "$KERAS_BACKEND" == "cntk" ]] || [[ "$MODE" == "PEP8_DOC" ]] || [[ "$MODE" == "API" ]]; then
      ./.travis/install_cntk.sh;
    fi
  # install mkdocs
  - pip install mkdocs --progress-bar off

  # install pyux
  - pip install pyux
script:
  - python test.py
